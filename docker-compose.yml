version: '3.8'

services:
  lti-character-counter:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: lti-character-counter
    ports:
      - "5000:5000"
    environment:
      # Variables de entorno LTI
      - LTI_KEY=${LTI_KEY:-schoology_test_key_123}
      - LTI_SECRET=${LTI_SECRET:-schoology_test_secret_456}
      - SECRET_KEY=${SECRET_KEY:-dev-secret-key}
      
      # Variables Flask
      - FLASK_APP=app.py
      - FLASK_ENV=${FLASK_ENV:-production}
      - FLASK_DEBUG=${FLASK_DEBUG:-False}
      
      # Variables del servidor
      - PORT=5000
      - PYTHONPATH=/app
    volumes:
      # Montar código para desarrollo (comentar en producción)
      - .:/app
      # Volumen para logs
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - lti-network

  # Servicio nginx para proxy reverso (opcional para producción)
  nginx:
    image: nginx:alpine
    container_name: lti-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - lti-character-counter
    restart: unless-stopped
    networks:
      - lti-network
    profiles:
      - production

  # Servicio de desarrollo con hot-reload
  lti-dev:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: lti-character-counter-dev
    ports:
      - "5001:5000"
    environment:
      - LTI_KEY=${LTI_KEY:-schoology_test_key_123}
      - LTI_SECRET=${LTI_SECRET:-schoology_test_secret_456}
      - SECRET_KEY=${SECRET_KEY:-dev-secret-key}
      - FLASK_APP=app.py
      - FLASK_ENV=development
      - FLASK_DEBUG=True
      - PORT=5000
      - PYTHONPATH=/app
    volumes:
      - .:/app
      - ./logs:/app/logs
    command: ["python", "app.py"]
    restart: unless-stopped
    networks:
      - lti-network
    profiles:
      - development

networks:
  lti-network:
    driver: bridge

volumes:
  logs:
    driver: local